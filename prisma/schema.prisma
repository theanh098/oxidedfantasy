datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int           @id @default(autoincrement())
  email             String        @unique @db.VarChar
  fpl_id            Int
  active            Boolean       @default(false)
  d_coin            Int           @default(0)
  google_id         String?       @db.VarChar
  facebook_id       String?       @db.VarChar
  name              String?       @db.VarChar(34)
  player_first_name String?       @db.VarChar(34)
  player_last_name  String?       @db.VarChar(34)
  matches           Match[]       @relation("match_owner")
  joined_matches    Match[]       @relation("match_opponent")
  win_on_matches    Match[]       @relation("match_winner")
  transactions      Transaction[]

  @@map("user")
}

model Match {
  id             Int          @id @default(autoincrement())
  season         String       @db.VarChar(16)
  created_date   DateTime     @default(now()) @db.Timestamptz(3)
  is_matched     Boolean      @default(false)
  matched_at     DateTime?    @db.Timestamptz(3)
  gameweek       Int
  bet_amount     Int
  transfer_rule  TransferRule
  chip_rule      ChipRule
  status         MatchStatus
  is_draw        Boolean      @default(false)
  owner_point    Int
  opponent_point Int
  metadata       Json         @default("{}")
  owner_id       Int
  opponent_id    Int?
  winner_id      Int?
  owner          User         @relation("match_owner", fields: [owner_id], references: [id])
  opponent       User?        @relation("match_opponent", fields: [opponent_id], references: [id])
  winner         User?        @relation("match_winner", fields: [winner_id], references: [id])

  @@map("match")
}

model Transaction {
  id           Int             @id() @default(autoincrement())
  created_date DateTime        @default(now()) @db.Timestamptz(3)
  owner_id     Int
  type         TransactionType
  d_coin       Int
  message      String?         @db.VarChar()
  metadata     Json            @default("{}")
  owner        User            @relation(fields: [owner_id], references: [id])

  @@map("transaction")
}

model EventStatus {
  gameweek              Int      @id
  deadline_time         DateTime @db.Timestamptz(3)
  finished              Boolean
  data_checked          Boolean
  average_entry_score   Int
  highest_scoring_entry Int
  deadline_time_epoch   Int
  is_previous           Boolean
  is_current            Boolean
  is_next               Boolean
  name                  String   @db.VarChar(26)

  @@map("event_status")
}

enum OffendedRule {
  Transferring
  UsingChip
  MinWeekStart
}

enum TransferRule {
  Limit0
  Limit1
  Limit2
  Limit3
  Limit4
  NoLimit
}

enum ChipRule {
  NoChip
  AnyChip
  All
}

enum MatchStatus {
  Live
  Finished
  Next
}

enum TransactionType {
  Match
  Purchase
  Event
}
